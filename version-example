#! /usr/bin/env python

import os
import re
import sys
import argparse
import subprocess

def run(cmd):
  (rc, stdout, stderr) = (None, '', '')
  if isinstance(cmd, basestring):
    cmd = cmd.split()
  try:
    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
  except Exception as e:
    print e
    pass
  else:
    (stdout, stderr) = p.communicate()
    rc = p.wait()
    print '{rc}, {stdout!r}, {stderr!r}'.format(**locals())
    if (rc == 0) and (not stdout):
      rc = None
  return (rc, stdout, stderr)

def get_version():
  git_used = False

  dir = os.path.dirname(sys.argv[0])
  base = os.path.basename(sys.argv[0])
  cwd = os.getcwd()
  try:
    os.chdir(dir)
  except:
    pass
  else:
    (rc, stdout, stderr) = run(['git', 'log', '-1', base])
    print '{rc}, {stdout!r}, {stderr!r}'.format(**locals())
    if rc == 0:
      """
        commit {SHA1}
        Author: {FIRST_NAME} {LAST_NAME} <{EMAIL_ADDRESS}>
        Date:   Wed Jan 16 09:32:03 2019 -0500
        . 
        . 
        . 
      """
      match = re.search(r'^commit\s+(\S+).*\nDate:\s+(([A-Z][a-z]{2} ){2} [ 0123]\d (\d{2}:){2}]\d{2} \d{4})', stdout, re.DOTALL)
      print match.groups() if match else None

  os.chdir(cwd)

  return '?'
      

parser = argparse.ArgumentParser(description='Example of doing a nifty --version')
parser.add_argument('--version', action='version', version=get_version())
args = parser.parse_args()
